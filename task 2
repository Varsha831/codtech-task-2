import seaborn as sns


iris = sns.load_dataset("iris")
iris


iris = iris[['petal_length','petal_width']] # Use square brackets to select columns


x = iris['petal_length']
y = iris['petal_width']


import matplotlib.pyplot as plt
plt.scatter(x,y)
plt.xlabel('petal_length') # Corrected spelling from xlable to xlabel
plt.ylabel('petal_width') # Corrected spelling from ylable to ylabel


from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size= 0.4,random_state=2)


x_train


y_train


x_test


y_test


import numpy as np
x_train = np.array(x_train).reshape(-1,1)  # Call reshape on the array object
x_train


x_test = np.array(x_test).reshape(-1,1)
x_test


from sklearn.linear_model import LinearRegression


lr = ([LinearRegression])


from sklearn.linear_model import LinearRegression

# Create an instance of the LinearRegression class
lr = LinearRegression()

# Fit the model to the training data
lr.fit(x_train, y_train)
   


c = lr.intercept_
c



c = lr.coef_
c



y.grid_train = lr.coef_ * x_train + c  # Use lr.coef_ instead of m
y.grid_train

y_pred_train = lr.predict(x_train)
y_pred_train # Use y_pred_train instead of y_pred_train1


import matplotlib.pyplot as plt
plt.scatter(x_train,y_train)
plt.scatter(x_train,y_pred_train,color='red')
plt.xlabel('petal_length') # Corrected spelling from xlable to xlabel
plt.ylabel('petal_width') # Corrected spelling from ylable to ylabel



y_pred_test = lr.predict(x_test)
y_pred_test # Use y_pred_train instead of y_pred_train1



import matplotlib.pyplot as plt
plt.scatter(x_test,y_test)
plt.scatter(x_test,y_pred_test,color='red')
plt.xlabel('petal_length') # Corrected spelling from xlable to xlabel
plt.ylabel('petal_width')

